# utils\nickname_generator.py
import random
from sqlalchemy.orm import Session
from models import User

adjectives = [
    "멋쟁이", "귀여운", "용감한", "지혜로운", "상냥한", "반짝이는", "든든한",
    "빛나는", "신비로운", "행복한", "자유로운", "부드러운", "강렬한", "조용한",
    "발랄한", "우아한", "근사한", "깜찍한", "영롱한", "정의로운", "성실한",
    "민첩한", "차분한", "활발한", "쾌활한", "감미로운", "담대한", "달콤한",
    "풍부한", "청명한", "산뜻한", "깨끗한", "강인한", "온화한", "수려한",
    "유쾌한", "짜릿한", "별난", "개성있는", "살랑이는", "부지런한", "신나는", 
    "아늑한", "정겨운", "자상한", "활기찬", "사려깊은", "열정적인", "풍요로운",
    "희망찬", "성숙한", "유연한", "기품있는", "맑은", "아름다운", "찬란한", 
    "한결같은", "믿음직한", "감각적인", "감동적인", "포근한", "낭만적인", "섬세한",
    "도전적인", "솔직한", "경쾌한", "낙천적인", "소중한", "경이로운", "장대한",
    "대담한", "근면한", "자비로운", "민감한", "영리한", "엉뚱한", "감성적인",
    "순수한", "천진난만한", "평화로운", "명랑한", "씩씩한", "서정적인", "탁월한",
    "화려한", "매력적인", "풍성한", "신뢰가는", "자연스러운", "우직한", "확고한",
    "당당한", "기발한", "모던한", "멋진", "편안한", "따뜻한", "친절한", "진지한",
    "창의적인", "지적인", "맹렬한", "생기있는", "감탄스러운", "우아한", "세련된",
    "감미로운", "무한한", "장난스러운", "낭랑한", "재치있는", "무적의", "불굴의",
    "청초한", "당찬", "청량한", "화끈한", "영감을주는", "신속한", "아기자기한"
]

nouns = [
    "할부지", "할무니", "친구", "이웃", "동네형", "고수", "챔피언",
    "영웅", "모험가", "전사", "천사", "악동", "별", "마법사", "기사",
    "도사", "행성", "미소", "꿈돌이", "달님", "숲", "바다", "무지개",
    "구름", "폭풍", "샛별", "여행자", "선생님", "도우미", "리더",
    "스타", "아티스트", "무림고수", "달인", "장인", "장군", "사자",
    "호랑이", "용", "돌고래", "바리스타", "선인장", "낙원", "여우",
    "달팽이", "장미", "소나무", "조력자", "건축가", "설계사", "교수",
    "번개", "메아리", "시냇물", "비둘기", "종달새", "사막", "오아시스",
    "사과", "포도", "초콜릿", "마녀", "행인", "상공인", "댄서", "화가",
    "시인", "정원사", "사서", "의사", "요리사", "천문학자", "고고학자",
    "무용수", "탐험가", "발명가", "예언자", "천재", "멘토", "스승",
    "선구자", "소설가", "철학자", "연주자", "선수", "대통령", "감독",
    "음악가", "목수", "재판관", "디자이너", "연구원", "마술사", "서퍼",
    "정복자", "수호자", "지휘자", "작가", "기자", "평론가", "모델",
    "촬영기사", "마케터", "안무가", "지휘관", "환경운동가", "기상학자",
    "기획자", "상담사", "플로리스트", "군인", "운동가", "강사", "선장",
    "탐정", "코치", "프로듀서", "모험왕", "예술가", "개척자", "연금술사"
]

def generate_random_nickname() -> str:
    adj = random.choice(adjectives)
    noun = random.choice(nouns)
    suffix = random.randint(0, 9999)
    return f"{adj} {noun}{suffix:04d}"

def generate_unique_nickname(db: Session) -> str:
    for _ in range(100):  # 최대 100회 시도
        nickname = generate_random_nickname()
        exists = db.query(User).filter(User.nickname == nickname).first()
        if not exists:
            return nickname
    raise Exception("❌ 닉네임 생성 실패: 너무 많은 중복")
